/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Video {
  /**
   * 要播放视频的资源地址，支持云文件ID
   */
  src?: string;
  /**
   * 指定视频时长
   */
  duration?: number;
  /**
   * 是否显示默认播放控件（播放/暂停按钮、播放进度、时间）
   */
  controls?: boolean;
  /**
   * 弹幕列表
   */
  "danmu-list"?: {
    [k: string]: unknown;
  };
  /**
   * 是否显示弹幕按钮，只在初始化时有效，不能动态变更
   */
  "danmu-btn"?: boolean;
  /**
   * 是否展示弹幕，只在初始化时有效，不能动态变更
   */
  "enable-danmu"?: boolean;
  /**
   * 是否自动播放
   */
  autoplay?: boolean;
  /**
   * 是否循环播放
   */
  loop?: boolean;
  /**
   * 是否静音播放
   */
  muted?: boolean;
  /**
   * 指定视频初始播放位置
   */
  "initial-time"?: number;
  /**
   * 在非全屏模式下，是否开启亮度与音量调节手势
   */
  "page-gesture"?: boolean;
  /**
   * 设置全屏时视频的方向，不指定则根据宽高比自动判断。有效值为 0（正常竖向）, 90（屏幕逆时针90度）, -90（屏幕顺时针90度）
   */
  direction?: number;
  /**
   * 若不设置，宽度大于240时才会显示
   */
  "show-progress"?: boolean;
  /**
   * 是否显示全屏按钮
   */
  "show-fullscreen-btn"?: boolean;
  /**
   * 是否显示视频底部控制栏的播放按钮
   */
  "show-play-btn"?: boolean;
  /**
   * 是否显示视频中间的播放按钮
   */
  "show-center-play-btn"?: boolean;
  /**
   * 是否开启控制进度的手势
   */
  "enable-progress-gesture"?: boolean;
  /**
   * 当视频大小与 video 容器大小不一致时，视频的表现形式。contain：包含，fill：填充，cover：覆盖
   */
  "object-fit"?: string;
  /**
   * 视频封面的图片网络资源地址或云文件ID。若 controls 属性值为 false 则设置 poster 无效
   */
  poster?: string;
  /**
   * 是否显示静音按钮
   */
  "show-mute-btn"?: boolean;
  /**
   * 视频的标题，全屏时在顶部展示
   */
  title?: string;
  /**
   * 播放按钮的位置，有效值为：bottom（controls bar 上）、center（视频中间）
   */
  "play-btn-position"?: string;
  /**
   * 是否开启播放手势，即双击切换播放/暂停
   */
  "enable-play-gesture"?: boolean;
  /**
   * 当跳转到其它小程序页面时，是否自动暂停本页面的视频
   */
  "auto-pause-if-navigate"?: boolean;
  /**
   * 当跳转到其它QQ原生页面时，是否自动暂停本页面的视频
   */
  "auto-pause-if-open-native"?: boolean;
  /**
   * 当开始/继续播放时触发play事件
   */
  bindPlay?: () => void;
  /**
   * 当暂停播放时触发 pause 事件
   */
  bindPause?: () => void;
  /**
   * 当播放到末尾时触发 ended 事件
   */
  bindEnded?: () => void;
  /**
   * 播放进度变化时触发，event.detail = {currentTime, duration} 。触发频率 250ms 一次
   */
  bindTimeUpdate?: () => void;
  /**
   * 视频进入和退出全屏时触发，event.detail = {fullScreen, direction}，direction 有效值为 vertical 或 horizontal
   */
  bindFullScreenChange?: () => void;
  /**
   * 视频出现缓冲时触发
   */
  bindWaiting?: () => void;
  /**
   * 视频播放出错时触发
   */
  bindError?: () => void;
  /**
   * 加载进度变化时触发，只支持一段加载。event.detail = {buffered}，百分比
   */
  bindProgress?: () => void;
}
